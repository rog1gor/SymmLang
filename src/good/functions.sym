:> Functions
Fun String koza(x, y, z) {
    Print(x, y, z);
    return x + y + z;
};
Print(koza("KOZA", "W", "ZAÅšWIATACH"));

:> Recursion
Fun Int gcd(a, b) {
    if (a % b == 0) {
        return b;
    };
    return gcd(b, a % b);
};

Print(gcd(6, 13));  :> 1
Print(gcd(2048, 96));  :> 32
Print(gcd(14369, 146543));  :> 1 (Both are prime)

:> Type FunT
Fun Int x() {
    return 5;
};
Let FunT y = x;
Print("Function type application:", y());

:> No argument types
Fun String untyped(choice, differ) {
    eif (choice) {
        return "GCD(14369, 146543) = " + differ(14369, 146543);
    } else {
        return "Int: " + differ;
    };
};
Print(untyped(False, 42));
Print(untyped(True, gcd));